/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsImport } from './routes/posts'
import { Route as IndexImport } from './routes/index'
import { Route as TestAboutImport } from './routes/test.about'
import { Route as PostsTestsImport } from './routes/posts.tests'
import { Route as Posts10Import } from './routes/posts.10'
import { Route as PostsIdImport } from './routes/posts.$id'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'

// Create/Update Routes

const PostsRoute = PostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TestAboutRoute = TestAboutImport.update({
  id: '/test/about',
  path: '/test/about',
  getParentRoute: () => rootRoute,
} as any)

const PostsTestsRoute = PostsTestsImport.update({
  id: '/tests',
  path: '/tests',
  getParentRoute: () => PostsRoute,
} as any)

const Posts10Route = Posts10Import.update({
  id: '/10',
  path: '/10',
  getParentRoute: () => PostsRoute,
} as any)

const PostsIdRoute = PostsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PostsRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/posts/$id': {
      id: '/posts/$id'
      path: '/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdImport
      parentRoute: typeof PostsImport
    }
    '/posts/10': {
      id: '/posts/10'
      path: '/10'
      fullPath: '/posts/10'
      preLoaderRoute: typeof Posts10Import
      parentRoute: typeof PostsImport
    }
    '/posts/tests': {
      id: '/posts/tests'
      path: '/tests'
      fullPath: '/posts/tests'
      preLoaderRoute: typeof PostsTestsImport
      parentRoute: typeof PostsImport
    }
    '/test/about': {
      id: '/test/about'
      path: '/test/about'
      fullPath: '/test/about'
      preLoaderRoute: typeof TestAboutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface PostsRouteChildren {
  PostsIdRoute: typeof PostsIdRoute
  Posts10Route: typeof Posts10Route
  PostsTestsRoute: typeof PostsTestsRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsIdRoute: PostsIdRoute,
  Posts10Route: Posts10Route,
  PostsTestsRoute: PostsTestsRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts/10': typeof Posts10Route
  '/posts/tests': typeof PostsTestsRoute
  '/test/about': typeof TestAboutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts/10': typeof Posts10Route
  '/posts/tests': typeof PostsTestsRoute
  '/test/about': typeof TestAboutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/posts/$id': typeof PostsIdRoute
  '/posts/10': typeof Posts10Route
  '/posts/tests': typeof PostsTestsRoute
  '/test/about': typeof TestAboutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/posts'
    | '/demo/tanstack-query'
    | '/posts/$id'
    | '/posts/10'
    | '/posts/tests'
    | '/test/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/posts'
    | '/demo/tanstack-query'
    | '/posts/$id'
    | '/posts/10'
    | '/posts/tests'
    | '/test/about'
  id:
    | '__root__'
    | '/'
    | '/posts'
    | '/demo/tanstack-query'
    | '/posts/$id'
    | '/posts/10'
    | '/posts/tests'
    | '/test/about'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostsRoute: typeof PostsRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  TestAboutRoute: typeof TestAboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostsRoute: PostsRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  TestAboutRoute: TestAboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/posts",
        "/demo/tanstack-query",
        "/test/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx",
      "children": [
        "/posts/$id",
        "/posts/10",
        "/posts/tests"
      ]
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/posts/$id": {
      "filePath": "posts.$id.tsx",
      "parent": "/posts"
    },
    "/posts/10": {
      "filePath": "posts.10.tsx",
      "parent": "/posts"
    },
    "/posts/tests": {
      "filePath": "posts.tests.tsx",
      "parent": "/posts"
    },
    "/test/about": {
      "filePath": "test.about.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

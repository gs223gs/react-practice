/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootImport } from './routes/root'
import { Route as PostsImport } from './routes/posts'
import { Route as PostImport } from './routes/post'
import { Route as EditPostImport } from './routes/edit-post'
import { Route as CreatePostImport } from './routes/create-post'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'

// Create/Update Routes

const RootRoute = RootImport.update({
  id: '/root',
  path: '/root',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const PostRoute = PostImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any)

const EditPostRoute = EditPostImport.update({
  id: '/edit-post',
  path: '/edit-post',
  getParentRoute: () => rootRoute,
} as any)

const CreatePostRoute = CreatePostImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-post': {
      id: '/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof CreatePostImport
      parentRoute: typeof rootRoute
    }
    '/edit-post': {
      id: '/edit-post'
      path: '/edit-post'
      fullPath: '/edit-post'
      preLoaderRoute: typeof EditPostImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/root': {
      id: '/root'
      path: '/root'
      fullPath: '/root'
      preLoaderRoute: typeof RootImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/edit-post': typeof EditPostRoute
  '/post': typeof PostRoute
  '/posts': typeof PostsRoute
  '/root': typeof RootRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/edit-post': typeof EditPostRoute
  '/post': typeof PostRoute
  '/posts': typeof PostsRoute
  '/root': typeof RootRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/edit-post': typeof EditPostRoute
  '/post': typeof PostRoute
  '/posts': typeof PostsRoute
  '/root': typeof RootRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-post'
    | '/edit-post'
    | '/post'
    | '/posts'
    | '/root'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-post'
    | '/edit-post'
    | '/post'
    | '/posts'
    | '/root'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/create-post'
    | '/edit-post'
    | '/post'
    | '/posts'
    | '/root'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreatePostRoute: typeof CreatePostRoute
  EditPostRoute: typeof EditPostRoute
  PostRoute: typeof PostRoute
  PostsRoute: typeof PostsRoute
  RootRoute: typeof RootRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreatePostRoute: CreatePostRoute,
  EditPostRoute: EditPostRoute,
  PostRoute: PostRoute,
  PostsRoute: PostsRoute,
  RootRoute: RootRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-post",
        "/edit-post",
        "/post",
        "/posts",
        "/root",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-post": {
      "filePath": "create-post.tsx"
    },
    "/edit-post": {
      "filePath": "edit-post.tsx"
    },
    "/post": {
      "filePath": "post.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx"
    },
    "/root": {
      "filePath": "root.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
